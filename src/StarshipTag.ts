/**
 * StarshipTag automatically generated by SDKgen please do not edit this file manually
 * {@link https://sdkgen.app}
 */

import {TagAbstract, HttpRequest} from "sdkgen-client"
import {ClientException, UnknownStatusCodeException} from "sdkgen-client";

import {Starship} from "./Starship";
import {StarshipCollection} from "./StarshipCollection";

export class StarshipTag extends TagAbstract {
    /**
     * Get all the starships
     *
     * @returns {Promise<StarshipCollection>}
     * @throws {ClientException}
     */
    public async getAll(search?: string): Promise<StarshipCollection> {
        const url = this.parser.url('/starships', {
        });

        let request: HttpRequest = {
            url: url,
            method: 'GET',
            headers: {
            },
            params: this.parser.query({
                'search': search,
            }, [
            ]),
        };

        const response = await this.httpClient.request(request);
        if (response.ok) {
            return await response.json() as StarshipCollection;
        }

        const statusCode = response.status;
        throw new UnknownStatusCodeException('The server returned an unknown status code: ' + statusCode);
    }
    /**
     * Get a specific starship
     *
     * @returns {Promise<Starship>}
     * @throws {ClientException}
     */
    public async get(id: string): Promise<Starship> {
        const url = this.parser.url('/starships/:id', {
            'id': id,
        });

        let request: HttpRequest = {
            url: url,
            method: 'GET',
            headers: {
            },
            params: this.parser.query({
            }, [
            ]),
        };

        const response = await this.httpClient.request(request);
        if (response.ok) {
            return await response.json() as Starship;
        }

        const statusCode = response.status;
        throw new UnknownStatusCodeException('The server returned an unknown status code: ' + statusCode);
    }



}
